{"version":3,"file":"static/js/297.2ded311d.chunk.js","mappings":"gMAMwBA,E,mBCLxB,GAAgB,QAAU,+BAA+B,YAAc,mCAAmC,gBAAkB,uCAAuC,MAAQ,6BAA6B,YAAc,mCAAmC,iBAAmB,wCAAwC,gBAAkB,uCAAuC,gBAAkB,uCAAuC,OAAS,+B,SDIzaC,EAAS,CAAC,GACQD,EAMtBE,EAAAA,OALEC,OAAOC,SAAQ,SAAAC,GACfJ,EAAOI,EAAIC,QAAQ,KAAM,KAAON,EAAEK,EACpC,IAMF,IAAME,EAAe,SAAAC,GACnB,OAAOP,EAAOO,EAChB,EA4CA,EA1CsB,WACpB,IACQC,IADSC,EAAAA,EAAAA,MACYC,OAAS,CAAEF,QAAS,KAAzCA,QAER,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,cAAkBC,UAChCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAYC,SACzBN,EAAQO,OAAS,EAChBP,EAAQQ,KAAI,SAAAC,GAAI,OACdC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,gBAAoBC,SAAA,EAClCH,EAAAA,EAAAA,KAAA,MAAAG,SAAKG,EAAKE,QACVR,EAAAA,EAAAA,KAAA,OACES,OAAM,GAAAC,OAAKf,EAAaW,EAAKjB,OAAO,OAAM,SAAAqB,OAAQf,EAChDW,EAAKjB,OAAO,OACb,SAAAqB,OAAQf,EAAaW,EAAKjB,OAAO,OAAM,OACxCsB,IAAKhB,EAAaW,EAAKjB,OAAO,OAC9BuB,IAAKN,EAAKE,KACVK,MAAM,MACNC,OAAO,SAETd,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,MAAUC,SAAEG,EAAKS,SAC/BR,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,YAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,iBAAqBC,SAAC,qBACpCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,gBAAoBC,SAChCG,EAAKU,gBAAgBX,KAAI,SAAAY,GAAc,OACtCjB,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,gBAAoBC,SAChCc,IADsCC,EAAAA,EAAAA,MAEpC,OAGTlB,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,OAAWC,SAAC,aArBOG,EAAKa,GAuBzC,KAGRnB,EAAAA,EAAAA,KAAA,KAAAG,SAAG,sBAKb,C,uDE3DO,IAAMiB,EACX,mECmBSF,EAAS,WAGlB,IAHiC,IAAdG,EAAIC,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACtBH,EAAK,GACLK,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWN,IAC3CA,KACLF,GAAMS,EAAgC,GAAdJ,EAAMH,IAEhC,OAAOF,CACT,C","sources":["components/SearchResults/SearchResults.jsx","webpack://react-homework-template/./src/components/SearchResults/SearchResults.module.css?b68e","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { nanoid } from 'nanoid';\r\nimport css from './SearchResults.module.css';\r\n\r\nconst images = {};\r\nconst importAllImages = r => {\r\n  r.keys().forEach(key => {\r\n    images[key.replace('./', '')] = r(key);\r\n  });\r\n};\r\nimportAllImages(\r\n  require.context('../../images/arrivals', false, /\\.(png|jpe?g|svg)$/)\r\n);\r\n\r\nconst getImagePath = path => {\r\n  return images[path];\r\n};\r\n\r\nconst SearchResults = () => {\r\n  const location = useLocation();\r\n  const { results } = location.state || { results: [] };\r\n\r\n  return (\r\n    <div className={css.searchResults}>\r\n      <div className={css.wrapper}>\r\n        {results.length > 0 ? (\r\n          results.map(item => (\r\n            <div className={css.itemDetailsPage} key={item.id}>\r\n              <h1>{item.name}</h1>\r\n              <img\r\n                srcSet={`${getImagePath(item.images['1x'])} 1x, ${getImagePath(\r\n                  item.images['2x']\r\n                )} 2x, ${getImagePath(item.images['3x'])} 3x`}\r\n                src={getImagePath(item.images['1x'])}\r\n                alt={item.name}\r\n                width=\"400\"\r\n                height=\"740\"\r\n              />\r\n              <p className={css.price}>{item.price}</p>\r\n              <div className={css.description}>\r\n                <p className={css.descriptionTitle}>Characteristics</p>\r\n                <ul className={css.descriptionList}>\r\n                  {item.characteristics.map(characteristic => (\r\n                    <li className={css.descriptionItem} key={nanoid()}>\r\n                      {characteristic}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                <button className={css.button}>Buy</button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No items found</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchResults_wrapper__57REG\",\"itemDetails\":\"SearchResults_itemDetails__BhH1N\",\"itemDetailsPage\":\"SearchResults_itemDetailsPage__QFYI2\",\"price\":\"SearchResults_price__6Dchh\",\"description\":\"SearchResults_description__nbNDX\",\"descriptionTitle\":\"SearchResults_descriptionTitle__Ul4LZ\",\"descriptionList\":\"SearchResults_descriptionList__pIMVF\",\"descriptionItem\":\"SearchResults_descriptionItem__Tw-1S\",\"button\":\"SearchResults_button__9lNnW\"};","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["r","images","require","keys","forEach","key","replace","getImagePath","path","results","useLocation","state","_jsx","className","css","children","length","map","item","_jsxs","name","srcSet","concat","src","alt","width","height","price","characteristics","characteristic","nanoid","id","urlAlphabet","size","arguments","undefined","bytes","crypto","getRandomValues","Uint8Array","scopedUrlAlphabet"],"sourceRoot":""}